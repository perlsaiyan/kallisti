#class {group} {kill}
#class {group} {open}

#nop -- ---------------------------------------------------------------
#nop -- Configuration variables
#nop -- ---------------------------------------------------------------
#var groupLoaded 1;

#list groupFriends {create} {Chaoran} {Xepher} {Donal} {Dain} {Akima} {Stabitha} {Nagra} {Toc} {Ariella} {Thomdril} {Skade} {Neith} {Bastet} {Anatta} {Rake} {Skade} {Namas} {Bauchelain} {Finan} {Sanla} {Bottle} {Alita} {Karsa} {Sakur} {Spindle} {Atropa} {Irene} {Callaghan} {Itkovian} {Kallor};

#nop -- ---------------------------------------------------------------
#nop -- Aliases
#nop -- ---------------------------------------------------------------

#alias groupCommand {
    #if {@groupIsFriend{%1}} {
		#switch {"%2"} {
			#case {"all recall"} {recall};
			#case {"all home"} {home};
			#case {"all depart"} {depart};
			#case {"qw"} {recall};
			#case {"fire"} {spellAdd nco {ff group}};
			#case {"vig"} {spellAdd nco {vig group}};
			#case {"stand"} {stand;mount dragonne};
			#case {"sleep"} {sleep};
			#case {"group all"} {group all};
			#case {"sum me"} {spellAdd nco {sum %1}};
			#case {"sit"} {sit};
			#case {"fol self"} {fol self};
			#case {"dismount"} {dismount};
			#case {"cure"} {spellAdd any {cure %1}};
			#case {"eyes"} {spellAdd nco {true %1}};
			#case {"all report"} {report};
			#case {"cv" } {spellAdd any {convert}};
			#case {"tnl"} {gt @hNum{$MSDP_EXPERIENCE} experience, @hNum{$MSDP_EXPERIENCE_TNL} TNL};
			#case {"start baramon"} {#read $ttd/zone/baramon.zone.no;dont_run_baramon};
			#case {"start telluria"} {#read $ttd/zone/telluria.q2;start};
			#case {"stop"} {
				#class {zone} kill;
				#class {hk} kill;
				gt yep, done
			};
			#case {"heal"} {
				spellAdd heal {heal %1};
			};
			#case {"evac"} {
				qp
			};
		}
	}
}

#alias groupNewFollower {
    #nop %0;
    #if {@groupIsFriend{%1}} {
        #if {(&MSDP_GROUP) && (&MSDP_GROUP[] > 0) } {
            #if {@groupAmILeader{}} {spellAdd {nco} {group %1}} {point @groupLeader{}}
        } {
            spellAdd {nco} {group $name};
            spellAdd {nco} {group %1}
        }
    } {
        #if {! @groupAmILeader{}} {point @groupLeader{}}
    }
}

#nop -- ---------------------------------------------------------------
#nop -- Actions
#nop -- ---------------------------------------------------------------

#action {^You now follow %1.} {
    #var GROUP_LEADER %1;
    diaLog group Setting group leader to %1.;
    #read $lib/follower.tin;
}

#action {^You stop following %1.} {
    #var GROUP_LEADER {};
    #class follower kill;
    diaLog group Unloading follower module.;
}

#action {^%w starts following you.$} {event_raise {new follower} {%1}}

event_register {new follower} {group new follower} {groupNewFollower %2}

#action {^{Donal|Dain|Rake|Skade|Chaoran|Anatta|Bauchelain} beckons you to follow.} {fol %1;#class zone kill;#class hk kill}

#action {^%w (Goliath) tells you, ':{.*}'$} {%2} {5}
#action {^%w (Deedra) tells you, ':{.*}'$} {%2} {5}

#action {^%w {rides|flies|sneaks} in} {event_raise {entity arrival} {%1}}

#nop -- ---------------------------------------------------------------
#nop -- Events
#nop -- ---------------------------------------------------------------
event_register {commsGroup} {groupCommand} {groupCommand {%2} {%3}}

#nop -- ---------------------------------------------------------------
#nop -- Functions
#nop -- ---------------------------------------------------------------
#function groupIsFriend {#list {groupFriends} {find} {%1} {result}}

#function groupIsGrouped {
    #var result 0;
    #loop {1} {&MSDP_GROUP[]} {index} {
        #if { "$MSDP_GROUP[$index][name]" == "%1" } { #var result 1; }
    }
}

#function groupIsPresent {
    #var result 0;
    #loop {1} {&MSDP_GROUP[]} {index} {
        #if { ("$MSDP_GROUP[$index][name]" == "%1" ) &&
              ($MSDP_GROUP[$index][with_you] == 1 ) } {
                #var result 1;
        }
    }
}

#function groupLeader {
    #var result {};
    #loop {1} {&MSDP_GROUP[]} {index} {
        #if {$MSDP_GROUP[$index][is_leader] == 1} {#return $MSDP_GROUP[$index][name]}
    }
}

#function groupAmILeader {
    #var result 0;
    #loop {1} {&MSDP_GROUP[]} {index} {
        #if { "$MSDP_GROUP[$index][name]" == "$name" } {
            #if {$MSDP_GROUP[$index][is_leader] == 1} { #return 1 }
        }
    }
    #return 0
}

#var GROUP_LEADER @groupLeader{};

#class {group} {close}


#nop -- vim: syntax=tt
