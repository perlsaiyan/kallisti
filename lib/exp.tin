#class {exp} {kill}
#class {exp} {open}

#variable {expRate} {0}
#variable {minsToLevel} {0}
#variable expMins 0;
#variable {startExp} {$MSDP_EXPERIENCE}
#format expStartTime {%T}

#tab reloadExp
#alias {reloadExp} {
  #class exp kill;
  #read $lib/exp.tin;
}

#alias {expCounter} {
        diaLog exp expCounter %2/$MSDP_EXPERIENCE;
		#math expGainz {%2-$startExp};
		#format expNowTime {%T};
        #math expElapsedTime {$expNowTime - $expStartTime};
        #math expPerSec {$expGainz/$expElapsedTime};
        #math expMins {$expPerSec * 60}
}

#alias {expAnnounceHeroPoints} {
    #line oneshot #tick {announce hero points} {
        slackMessage {I now have %1 hero points}
    } {30};
}

event_register expUpdate expCounter {expCounter %2}
event_register {exp levelup} {exp tin reload} {#line oneshot #tick {exp reload} {reloadExp} {10}}
event_register {variable MSDP_HERO_POINTS} {exp hero points} {expAnnounceHeroPoints {%2}}

#event {VARIABLE UPDATE MSDP_EXPERIENCE} {event_raise {expUpdate} {expCounter %1}}

#action {^* * * You now have enough experience to gain a level! * * *} {
    #math result {$MSDP_LEVEL + 1};
    slackMessage {I have enough experience for level $result.}
};

#action {^--+  Congratulations, you are now level %d!  +--$} {
    event_raise {exp levelup} {%1}
    diaLog exp Level %1 reached;
    slackMessage {Woot, level %1}
}

expCounter startup $MSDP_EXPERIENCE

#class {exp} {close}
#nop -- vim: syntax=tt
